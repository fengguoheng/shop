{"version":3,"file":"js/300.abf64dc1.js","mappings":"2NAGO,MAAMA,GAAgBC,EAAAA,EAAAA,IAAY,QAAS,CAC9CC,MAAOA,KAAA,CACHC,KAAM,CACFC,SAAU,GACVC,SAAU,IAGdC,QAAS,GACTC,YAAY,EACZC,MAAO,GACPC,YAAY,IAEhBC,QAAS,CACL,cAAMC,GACF,IAEI,MAAMC,QAAiBC,EAAAA,EAAMC,KACzB,GAAGC,EAAAA,iBACH,CACIX,SAAUY,KAAKb,KAAKC,SACpBC,SAAUW,KAAKb,KAAKE,UAExB,CACIY,iBAAiB,IAGzB,MAA8B,gBAA1BL,EAASM,KAAKZ,SACdU,KAAKT,YAAa,EAClBS,KAAKV,QAAUM,EAASM,KAAKZ,QAC7BU,KAAKR,MAAQI,EAASM,KAAKV,MAC3BQ,KAAKP,WAAaG,EAASM,KAAKC,EAChCC,QAAQC,IAAIL,KAAKP,YACjBa,aAAaC,QAAQ,aAAcP,KAAKP,YACxCa,aAAaC,QAAQ,QAASP,KAAKR,OAEnCc,aAAaC,QAAQ,WAAYX,EAASM,KAAKd,UAC/CkB,aAAaC,QAAQ,KAAMX,EAASM,KAAKM,KAElC,IAEPR,KAAKT,YAAa,EAClBS,KAAKV,QAAUM,EAASM,KAAKZ,SACtB,EAEf,CAAE,MAAOmB,GAEL,OADAT,KAAKV,QAAU,YACR,CACX,CACJ,K,oHCjBR,MAAMoB,EAAa1B,IACb2B,EAAQC,EACRC,GAAUC,EAAAA,EAAAA,IAAI,MACdC,GAASC,EAAAA,EAAAA,MAETC,EAAiBC,UACnB,MAAMC,QAAkBT,EAAWf,WAC/BwB,IACAR,EAAM,iBACNI,EAAOK,KAAK,SAChB,EAEEC,EAAoBA,KACtBC,OAAOC,SAASC,KAAO,GAAGzB,EAAAA,eAAoB,EAE5C0B,EAAaA,KACfV,EAAOK,KAAK,YAAY,EAEtBM,EAASA,KACXX,EAAOK,KAAK,QAAQ,E,+8CC/CxB,MAAMO,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://client/./src/store/loginStore.js","webpack://client/./src/components/UserLogin.vue","webpack://client/./src/components/UserLogin.vue?d766"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport axios from 'axios';\r\nimport apiUrl from '../config.js';\r\nexport const useLoginStore = defineStore('login', {\r\n    state: () => ({\r\n        form: {\r\n            username: '',\r\n            password: '',\r\n\r\n        },\r\n        message: '',\r\n        loginError: false,\r\n        email: '',\r\n        isLoggedIn: false,\r\n    }),\r\n    actions: {\r\n        async sqlLogin() {\r\n            try {\r\n\r\n                const response = await axios.post(\r\n                    `${apiUrl}/api/sqlLogin`,\r\n                    {\r\n                        username: this.form.username,\r\n                        password: this.form.password\r\n                    },\r\n                    {\r\n                        withCredentials: true // 单个请求配置携带 Cookie\r\n                    }\r\n                );\r\n                if (response.data.message === 'SQL 数据库登录成功') {\r\n                    this.loginError = false;\r\n                    this.message = response.data.message;\r\n                    this.email = response.data.email;\r\n                    this.isLoggedIn = response.data.b;\r\n                    console.log(this.isLoggedIn);\r\n                    localStorage.setItem('isLoggedIn', this.isLoggedIn);\r\n                    localStorage.setItem('email', this.email);\r\n\r\n                    localStorage.setItem('username', response.data.username);\r\n                    localStorage.setItem('id', response.data.id);\r\n\r\n                    return true; // 表示登录成功\r\n                } else {\r\n                    this.loginError = true;\r\n                    this.message = response.data.message;\r\n                    return false;\r\n                }\r\n            } catch (error) {\r\n                this.message = 'SQL 登录失败';\r\n                return false;\r\n            }\r\n        },\r\n    },\r\n});\r\n","<template>\r\n    <div class=\"login-container\">\r\n        <el-card class=\"login-card\">\r\n            <template #header>\r\n                <h2>登录</h2>\r\n            </template>\r\n            <el-form :model=\"loginStore.form\" ref=\"formRef\">\r\n                <el-form-item>\r\n                    <el-input v-model=\"loginStore.form.username\" placeholder=\"用户名\"\r\n                        :class=\"{ 'error-input': loginStore.loginError }\" />\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-input v-model=\"loginStore.form.password\" placeholder=\"密码\" type=\"password\" />\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"handleSqlLogin\">登录</el-button>\r\n                    <el-button @click=\"toRegister\">现在去注册</el-button>\r\n                    <el-button id=\"githubLoginBtn\" @click=\"handleGithubLogin\">\r\n\r\n                        使用 GitHub 登录\r\n                    </el-button>\r\n                    <el-button @click=\"toHome\">游客</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n            <p>{{ loginStore.message }}</p>\r\n        </el-card>\r\n        <img src=\"background.jpg\" alt=\"背景图\" class=\"bg-image\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineEmits, ref } from 'vue';\r\nimport { useLoginStore } from '../store/loginStore';\r\nimport { useRouter } from 'vue-router'; // 引入 useRouter 钩子\r\nconst loginStore = useLoginStore();\r\nconst emits = defineEmits(['login-success']);\r\nconst formRef = ref(null);\r\nconst router = useRouter();\r\nimport apiUrl from '../config.js';\r\nconst handleSqlLogin = async () => {\r\n    const isSuccess = await loginStore.sqlLogin();\r\n    if (isSuccess) {\r\n        emits('login-success');\r\n        router.push('/home');\r\n    }\r\n};\r\nconst handleGithubLogin = () => {\r\n    window.location.href = `${apiUrl}/auth/github`;\r\n};\r\nconst toRegister = () => {\r\n    router.push('/register'); // 使用 router.push 跳转\r\n};\r\nconst toHome = () => {\r\n    router.push('/home');\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n}\r\n\r\n.login-card {\r\n    width: 400px;\r\n    padding: 24px;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.el-form-item {\r\n    margin-bottom: 16px;\r\n}\r\n\r\n.login-container {\r\n    position: relative;\r\n    min-height: 100vh;\r\n}\r\n\r\n.bg-image {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    z-index: -1;\r\n    /* 置于底层 */\r\n}\r\n\r\n.login-card {\r\n    position: relative;\r\n    z-index: 1;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 2rem;\r\n    background: white;\r\n    /* 卡片背景色 */\r\n}\r\n</style>","import script from \"./UserLogin.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserLogin.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserLogin.vue?vue&type=style&index=0&id=15f2c40d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-15f2c40d\"]])\n\nexport default __exports__"],"names":["useLoginStore","defineStore","state","form","username","password","message","loginError","email","isLoggedIn","actions","sqlLogin","response","axios","post","apiUrl","this","withCredentials","data","b","console","log","localStorage","setItem","id","error","loginStore","emits","__emit","formRef","ref","router","useRouter","handleSqlLogin","async","isSuccess","push","handleGithubLogin","window","location","href","toRegister","toHome","__exports__"],"sourceRoot":""}